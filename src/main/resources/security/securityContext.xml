<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- Enable auto-wiring -->
	<context:annotation-config />
	<context:component-scan base-package="org.springframework.security.saml" />

	<!-- Unsecured pages -->
	<security:http security="none" pattern="/css/**" />
	<security:http security="none" pattern="/bootstrap/**" />
	<security:http security="none" pattern="/js/**" />
	<security:http security="none" pattern="/img/**" />
	<security:http security="none" pattern="/imgages/**" />
	<security:http security="none" pattern="/favicon.ico" />


	<context:property-placeholder location="classpath*:default.dev.properties"
		ignore-resource-not-found="true" />

	<!-- Logger for SAML messages and events -->
	<bean id="samlLogger" class="org.springframework.security.saml.log.SAMLDefaultLogger" />

	<bean id="userDetailsService"
		class="se.inera.fmu.infrastructure.security.FmuUserDetailsService" />

	<!-- Initialization of OpenSAML library -->
	<bean class="org.springframework.security.saml.SAMLBootstrap" />

	<!-- Initialization of the velocity engine -->
	<bean id="velocityEngine" class="org.springframework.security.saml.util.VelocityFactory"
		factory-method="getEngine" />

	<!-- XML parser pool needed for OpenSAML parsing -->
	<bean id="parserPool" class="org.opensaml.xml.parse.StaticBasicParserPool"
		scope="singleton" init-method="initialize" />
	<bean id="parserPoolHolder"
		class="org.springframework.security.saml.parser.ParserPoolHolder"
		scope="singleton" />

	<bean id="failureHandler"
		class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
		<property name="exceptionMappings">
			<props>
				<prop key="se.inera.auth.exceptions.MissingMedarbetaruppdragException">
					/error.jsp?reason=medarbetaruppdrag
				</prop>
				<prop
					key="org.springframework.security.authentication.BadCredentialsException">
					/error.jsp?reason=badcredentials
				</prop>
			</props>
		</property>
		<property name="defaultFailureUrl" value="/error.jsp" />
	</bean>

	<bean id="http403ForbiddenEntryPoint"
		class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />
	<security:global-method-security
		pre-post-annotations="enabled" />
	<!-- =============================================================== -->
	<!-- Dev profile only supports Fake login -->
	<!-- =============================================================== -->
	<security:debug />
	<security:http entry-point-ref="http403ForbiddenEntryPoint"
		pattern="/api/verksamhet/**">
		<security:intercept-url pattern="/**"
			access="IS_AUTHENTICATED_FULLY" />
		<security:custom-filter position="PRE_AUTH_FILTER"
			ref="fakeAuthFilter" />
	</security:http>
	<security:http entry-point-ref="http403ForbiddenEntryPoint"
		use-expressions="true">
		<security:logout logout-url="/saml/logout"
			logout-success-url="/" invalidate-session="true" />
		<security:intercept-url pattern="/**" access="permitAll" />
		<security:custom-filter position="PRE_AUTH_FILTER"
			ref="fakeAuthFilter" />
	</security:http>
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			ref="fakeAuthenticationProvider" />
	</security:authentication-manager>




	<bean id="fakeAuthFilter"
		class="se.inera.fmu.infrastructure.security.FakeAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationSuccessHandler" ref="fakeSuccessHandler" />
		<property name="authenticationFailureHandler" ref="failureHandler" />
	</bean>
	<bean id="fakeSuccessHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/#/verksamhet" />
	</bean>
	<bean id="fakeAuthenticationProvider"
		class="se.inera.fmu.infrastructure.security.FakeAuthenticationProvider">
		<property name="userDetails" ref="userDetailsService" />
	</bean>


</beans>
